#include<stdio.h>
#include<stdlib.h>
#include <GL/glut.h>
using namespace std;
float shift=0;

void init(void)
{
glClearColor(1.0,1.0,1.0,0.0);
glMatrixMode(GL_PROJECTION);
gluOrtho2D(0,600,0,400);
}

void boat(void)
{
glClear(GL_COLOR_BUFFER_BIT);

glBegin(GL_QUADS);
	glColor3f(0.0,1.0,1.0);
	glVertex2i(0,0);
	glVertex2i(600,0);
	glVertex2i(600,150);
	glVertex2i(0,150);
glEnd();

glBegin(GL_QUADS);
	glColor3f(0.255,0.2222,0.173);
	glVertex2i(200+shift,150);
	glVertex2i(400+shift,150);
	glVertex2i(450+shift,200);
	glVertex2i(150+shift,200);
glEnd();

glBegin(GL_TRIANGLES);
	glColor3f(1.0,1.0,0.0);
	glVertex2i(240+shift,200);
	glVertex2i(360+shift,200);
	glVertex2i(300+shift,260);
glEnd();

//glBegin(GL_LINES);
//	glColor3f(0.647059,0.164706,0.164706);
//	glVertex2i(300,239);
//	glVertex2i(300,290);
//glEnd();

//glBegin(GL_TRIANGLES);
//	glColor3f(1.0,0.0,0.0);
//	glVertex2i(300,290);
//	glVertex2i(300,270);
//	glVertex2i(320,280);
//glEnd();

int i,j;
for(i=20;i<600;i+=40)
{	for(j=130;j>0;j-=60)
	{
	glBegin(GL_LINES);
		glColor3f(0,0,1.0);
		glVertex2i(i,j);
		glVertex2i(i+20,j);
	glEnd();
	}
}

for(i=0;i<580;i+=40)
{	for(j=100;j>0;j-=60)
	{
	glBegin(GL_LINES);
		glColor3f(0,0,1.0);
		glVertex2i(i,j);
		glVertex2i(i+20,j);
	glEnd();
	}
}

glFlush();


}

void key(int key, int x, int y)
{
switch(key)
{
case GLUT_KEY_LEFT:
shift--;
glutPostRedisplay();
break;

case GLUT_KEY_RIGHT:
shift++;
glutPostRedisplay();
break;
}


}

int main(int argc,char** argv)
{
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowPosition(50,100);
glutInitWindowSize(600,400);
glutCreateWindow("Boat Program");

init();
glutDisplayFunc(boat);
glutSpecialFunc(key);
glutMainLoop();
return 0;

}